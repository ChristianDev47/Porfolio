import { TAGS } from "./tags";

export const PROJECTS = [
  {
    title: 'GrinChat',
    subtitle: 'Fullstack Online Chat Application',
    description: 'GrinChat Fullstack Online Chat Application is a comprehensive solution for real-time communication, combining a solid backend with a modern frontend. The backend, developed with Node.js and Express, provides a complete RESTful API that handles JWT authentication, CRUD operations, and real-time communication using Socket.IO. It uses MongoDB for data storage, ensuring a scalable and efficient architecture. The frontend, built with Next.js and TypeScript, offers a modern, responsive user interface for user registration, instant messaging, contact management, and audio/video calls. The entire system is designed to provide a seamless user experience with real-time notifications and full integration with backend services. The project demonstrates the implementation of a fullstack solution using modern tools and technologies, with a modular architecture that allows easy maintenance and scalability.',
    resume: 'GrinChat facilitates instant messaging, audio/video calls, and contact management with a scalable fullstack architecture.',
    link: 'https://grinchat.vercel.app',
    github: 'https://github.com/ChristianDev47/GrinChat',
    image: '/projects/grinchat.webp',
    video: 'https://res.cloudinary.com/dv38v80kd/video/upload/v1727108730/projects/chat_online/videos/grinchat.mp4',
    tags: [TAGS.NEXT, TAGS.TYPESCRIPT, TAGS.CSS, TAGS.CLOUDINARY, TAGS.NODEJS, TAGS.EXPRESS, TAGS.SWAGGER, TAGS.MONGODB, TAGS.JEST, TAGS.DOCKER],
  },
  {
    title: 'Tasty Trails',
    subtitle: 'Fullstack Restaurant Ordering System',
    description: 'Tasty Trails is a self-designed and implemented fullstack application for managing online orders for restaurants. It includes both a backend API and a frontend interface, each built with modern technologies to offer a robust, scalable, and user-friendly system. The backend is developed with Node.js and Express, using a MySQL database and following an MVC architecture for efficient data management and operations. Authentication and authorization are managed with JWT, and the system includes CRUD operations for users, roles, orders, and dishes. The frontend, developed with Next.js and TypeScript, provides a dynamic, responsive interface, integrating with the backend API for order and user profile management. The application uses Tailwind CSS for styling, React Hook Form for form handling, and Zod for data validation. Both parts of the system are dockerized to ensure a consistent development and production environment.',
    resume: 'Tasty Trails manages online restaurant orders with an intuitive interface and scalable architecture.',
    link: 'https://tasty-trails-self.vercel.app',
    github: 'https://github.com/ChristianDev47/Tasty_Trails',
    image: '/projects/tasty_trails.webp',
    video: 'https://res.cloudinary.com/dv38v80kd/video/upload/v1727108730/projects/chat_online/videos/tasty_trails.mp4',
    tags: [TAGS.NEXT, TAGS.TYPESCRIPT, TAGS.TAILWIND, TAGS.CLOUDINARY, TAGS.NODEJS, TAGS.EXPRESS, TAGS.SWAGGER, TAGS.MYSQL, TAGS.JEST, TAGS.DOCKER],
  },
  {
    title: 'Boardify',
    subtitle: 'Fullstack Project Management Application',
    description: 'Boardify is a self-designed and implemented fullstack application, tailored for effective project management and collaboration. Inspired by Trello, Boardify combines a sophisticated backend with a dynamic, responsive frontend, offering a seamless user experience for managing projects, boards, lists, and cards. The backend is developed with Node.js, Express, and MongoDB, using JWT for authentication, Bcrypt for password security, and Cloudinary for media management. The frontend, built with React and Tailwind CSS, provides a rich user interface with drag-and-drop functionality, calendar visualization, and real-time notifications. The application is deployed on Docker to ensure a consistent development and production environment.',
    resume: 'Boardify simplifies project management with interactive boards, lists, and cards, integrating drag-and-drop functionality.',
    link: 'https://boardify-liart.vercel.app',
    github: 'https://github.com/ChristianDev47/Boardify',
    image: '/projects/boardify.webp',
    video: 'https://res.cloudinary.com/dv38v80kd/video/upload/v1727108730/projects/chat_online/videos/boardify.mp4',
    tags: [TAGS.REACT, TAGS.JAVASCRIPT, TAGS.TAILWIND, TAGS.CLOUDINARY, TAGS.NODEJS, TAGS.EXPRESS, TAGS.SWAGGER, TAGS.MONGODB, TAGS.JEST, TAGS.DOCKER],
  },
  {
    title: 'To-Do App',
    subtitle: 'Task Management',
    description: 'To-Do App is a responsive task application built with React and TypeScript, styled with Tailwind CSS. It provides an intuitive interface for managing tasks, including adding, marking as completed, and deleting tasks. The application also features local storage functionality to persist tasks across page reloads.',
    resume: 'To-Do App allows intuitive task management with local storage for persistence.',
    link: 'https://to-do-app-nine-flame.vercel.app',
    github: 'https://github.com/ChristianDev47/To-do-app',
    image: '/projects/to_do_app.webp',
    video: 'https://res.cloudinary.com/dv38v80kd/video/upload/v1727108730/projects/chat_online/videos/to_do_app.mp4',
    tags: [TAGS.REACT, TAGS.TYPESCRIPT, TAGS.TAILWIND],
  },
  {
    title: 'Ecomtren',
    subtitle: 'Fullstack E-Commerce Application',
    description: 'Ecomtren is a fullstack application designed and implemented for managing online e-commerce activities. The project includes a robust backend and a dynamic frontend, both built with modern technologies to offer a scalable and user-friendly system. The backend is developed with Django, implementing JWT authentication for advanced security, route protection, and testing with Jest to ensure reliability. It also uses Swagger with DRF Spectacular for API documentation. The frontend, built with React and TypeScript, provides a responsive user interface for managing products, shopping cart, and user profiles. The system is designed to offer a smooth and efficient shopping experience with full integration between the frontend and backend.',
    resume: 'Ecomtren optimizes online product and shopping management with a secure backend and an interactive frontend.',
    link: 'https://e-commerce-nine-ebon.vercel.app',
    github: 'https://github.com/ChristianDev47/E-commerce',
    image: '/projects/ecomtren.webp',
    video: 'https://res.cloudinary.com/dv38v80kd/video/upload/v1727108730/projects/chat_online/videos/ecomtren.mp4',
    tags: [TAGS.REACT, TAGS.TYPESCRIPT, TAGS.TAILWIND, TAGS.DJANGO, TAGS.PYTHON, TAGS.CLOUDINARY, TAGS.POSTGRESQL, TAGS.DOCKER, TAGS.SWAGGER],
  },
  {
    title: 'Google Translate Copy',
    subtitle: 'Fullstack Translation System',
    description: 'Google Translate Copy is a fullstack application designed to provide efficient text translation services inspired by the traditional Google Translate. The system includes a backend API and a frontend interface, each built with modern technologies to ensure a robust, scalable, and user-friendly translation system. The backend, developed with Django and Django REST Framework (DRF), handles all server-side operations related to text translation, leveraging Cloudflare AI services for automatic language detection and customizable language options. It includes endpoints for text translation, language detection, and error handling. The frontend interface, built with React and TypeScript and styled with Tailwind CSS, offers a clean and intuitive interface for entering text, selecting languages, and viewing translations. It integrates additional features such as text-to-speech and copying translations. Both parts of the system are designed to provide a consistent and efficient user experience across all devices.',
    resume: 'Google Translate Copy translates text with automatic language detection and features like text-to-speech.',
    link: 'https://google-translate-pink.vercel.app',
    github: 'https://github.com/ChristianDev47/Google_Translate',
    image: '/projects/google_translate.webp',
    video: 'https://res.cloudinary.com/dv38v80kd/video/upload/v1727108730/projects/chat_online/videos/google_translate.mp4',
    tags: [TAGS.REACT, TAGS.TYPESCRIPT, TAGS.TAILWIND, TAGS.DJANGO, TAGS.PYTHON, TAGS.CLOUDFLARE],
  },
  {
    title: 'Tic Tac Toe',
    subtitle: 'Tic-Tac-Toe Game',
    description: 'The Tic-Tac-Toe Game is a responsive frontend implementation of the classic Tic-Tac-Toe game, developed using React with JavaScript and CSS. The application offers a simple and intuitive interface for players to enjoy the game across multiple devices, with local storage functionality to persist the game state.',
    resume: 'Tic Tac Toe offers a modern experience of the classic game with a responsive interface and local storage.',
    link: 'tic-tac-toe-virid-one.vercel.app',
    github: 'https://github.com/ChristianDev47/Tic-tac-toe',
    image: '/projects/tic_tac_toe.webp',
    video: 'https://res.cloudinary.com/dv38v80kd/video/upload/v1727108730/projects/chat_online/videos/tic_tac_toe.mp4',
    tags: [TAGS.REACT, TAGS.JAVASCRIPT, TAGS.CSS],
  },
];
