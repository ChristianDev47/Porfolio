---
import HeaderLink from "./HeaderLink.astro";
import { getLangFromUrl, useTranslations, useTranslatedPath, } from '../i18n/utils';


const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<header class=" justify-center items-center md:hidden flex gap-5 mt-2 p-4 fixed bottom-4 left-0 right-0 max-w-[26.5rem] m-auto  rounded-xl z-[100] animate-fade-up animate-duration-[3000ms]">
  <HeaderLink class="text__glowing" label="habilidades" href={translatePath('/#habilidades')}>
    {t('nav.habilidades')}
  </HeaderLink>
  <HeaderLink class="text__glowing" label="proyectos" href={translatePath('/#proyectos')}>
    {t('nav.proyectos')}
  </HeaderLink>
  <HeaderLink class="text__glowing" label="sobre-mí" href={translatePath('/#sobre-mí')}>
    {t('nav.sobre-mí')}
  </HeaderLink>
  <HeaderLink class="text__glowing" label="contacto" href={translatePath('/#contacto')}>
    {t('nav.contacto')}
  </HeaderLink>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav div div a")
  
    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label")?.toString() === entry.target.id) {
              item.classList.add("dark:text-white", "text-[#20b556]");
            } else {
              item.classList.remove("dark:text-white", "text-[#20b556]");
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "50px 0px -50px 0px",
      threshold: 0.1,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  header {
    animation: nav-shadown 1s linear both;
    animation-range: 0 100px;
  }

  header {
    @apply dark:bg-[#14181c]/90 bg-white/50;
  }

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-800/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 dark:backdrop-blur-md backdrop-blur-xl ring-white/10;
    }
  }
</style>