<section class="intro">
  <h2 class="intro__title hidden">Not everything is black and white</h2>
  <div class="intro__background intro__background--left"></div>
  <div class="intro__background intro__background--right"></div>
</section>

<script>
import gsap, { TimelineLite } from 'gsap';

const animationOptions = {
    ease: 'expo.inOut' as const, // Definir tipo para la cadena de animación
};

// Tipado para las funciones que reciben elementos
const introAnimation = (): TimelineLite => {
    const tl = gsap.timeline({
        defaults: {
            ease: animationOptions.ease,
            duration: 1,
        }
    });

    tl.to('.intro__title', {
        duration: 1.5,
        y: 0,
        autoAlpha: 1,
        delay: 0.5,
    })
    .to('.intro__background--left, .intro__background--right', {
        scaleX: 1,
    })
    .to('.intro__background--left, .intro__background--right', {
        scaleY: 0,
        transformOrigin: 'top center',
    })
    .to('.intro__title', {
        duration: 1.5,
        y: -60,
        autoAlpha: 0,
    }, '-=0.6')
    .to('.intro', {
        y: '-100%',
    }, '-=0.5')

    return tl;
}

const skewInElements = (elements: string | string[]): TimelineLite => {  // Tipo ajustado para `elements`
    const tl = gsap.timeline();

    tl.from(elements, {
        duration: 1,
        ease: animationOptions.ease,
        skewY: -5,
        autoAlpha: 0,
        y: 40,
    })

    return tl;
}

const fadeInElements = (elements: string | string[]): TimelineLite => {  // Tipo ajustado para `elements`
    const tl = gsap.timeline();

    tl.from(elements, {
        duration: 1,
        ease: animationOptions.ease,
        y: '20px',
        autoAlpha: 0,
        stagger: 0.1,
    })

    return tl;
}

// Crear la animación principal (master)
const master = gsap.timeline({
    paused: false,
    delay: 0.2,
});

master
    .add(introAnimation())
    .add(fadeInElements('.header__logo, .header__nav a'))
    .add(skewInElements('h1, .hero__col--2 img'), '-=1');
</script>