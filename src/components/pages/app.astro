---
import Hero from '../Hero.astro';
import Skills from '../Skills.astro';
import SectionContainer from '../SectionContainer.astro';
import Projects from '../Projects.astro';
import About from '../About.astro';
import Contact from '../Contact.astro';
import Education from '../Education.astro';
import Experience from '../Experience.astro';
import Certifications from '../Certifications.astro';
---

<main class="w-full flex flex-col gap-[6rem]">
	<SectionContainer>
		<Hero>
			</slot>
		</Hero>
	</SectionContainer>
  <SectionContainer id="about-me">
    <About/>
  </SectionContainer>
	<SectionContainer  id="skills">
		<Skills/>
	</SectionContainer>
  <SectionContainer id="education">
    <Education/>
  </SectionContainer>
	<SectionContainer id="projects">
		<Projects/>
	</SectionContainer>
	<SectionContainer id="experience">
		<Experience/>
	</SectionContainer>
	<SectionContainer id="certifications">
		<Certifications/>
	</SectionContainer>
	<SectionContainer id="contact">
		<Contact/>
	</SectionContainer>
</main>


<script>
  import { annotate } from "rough-notation";

  function initializeAnnotations() {
    const notions = document.querySelectorAll('main section div h2');
    const annotations = Array.from(notions).map((node) => {
      const element = node as HTMLElement;

      return annotate(element, {
        type: "underline",
        color: "#4ade80",
        multiline: true,
        brackets: ["left", "right"],
        strokeWidth: 1.5,
        animationDuration: 1000,
        animate: true,
      });
    });

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        const index = Array.from(notions).indexOf(entry.target);
        if (entry.isIntersecting) {
          annotations[index].hide(); 
          setTimeout(() => {
            annotations[index].show(); 
          }, 0);
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "50px 0px -50px 0px",
      threshold: 0.1,
    });

    notions.forEach((title) => {
      observer.observe(title);
    });
  }

  initializeAnnotations();
  document.addEventListener("astro:after-swap", initializeAnnotations);
</script>
